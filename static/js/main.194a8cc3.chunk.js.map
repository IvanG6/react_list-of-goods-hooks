{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","initialGoods","useState","goods","setGoods","isStarted","setIsStarted","className","Button","variant","size","onClick","sortedByAlphabet","sort","sortedByLength","a","b","length","reversed","reverse","ListItem","map","good","ListItemText","ReactDOM","render","document","getElementById"],"mappings":"4PAMMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,IAAMC,EAAeF,EACrB,EAA0BG,mBAAmBH,GAA7C,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAAkCF,oBAAkB,GAApD,mBAAOG,EAAP,KAAkBC,EAAlB,KA6BA,OACE,qBAAKC,UAAU,MAAf,SACIF,EAYE,gCACE,cAACG,EAAA,EAAD,CACEC,QAAQ,WACRC,KAAK,QACLC,QA7Ce,WACzB,IAAMC,EAA6B,YAAIX,GAAcY,OAErDT,EAASQ,IA2CCL,UAAU,SAJZ,iCASA,cAACC,EAAA,EAAD,CACEC,QAAQ,WACRC,KAAK,QACLC,QAhDS,WACnB,IAAMG,EACF,YAAIb,GAAcY,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAElDb,EAASU,IA6CCP,UAAU,SAJZ,4BASA,cAACC,EAAA,EAAD,CACEC,QAAQ,WACRC,KAAK,QACLC,QAlDI,WACd,IAAMO,EAAqB,YAAIf,GAAOgB,UAEtCf,EAASc,IAgDCX,UAAU,SAJZ,qBASA,cAACC,EAAA,EAAD,CACEC,QAAQ,WACRC,KAAK,QACLC,QArDE,WACZP,EAASH,IAqDCM,UAAU,SAJZ,mBASA,cAACa,EAAA,EAAD,CAAUb,UAAU,QAApB,SACGJ,EAAMkB,KAAI,SAAAC,GAAI,OACb,cAACC,EAAA,EAAD,CAAyBhB,UAAU,cAAnC,SACGe,GADgBA,WAjDzB,cAACd,EAAA,EAAD,CACEC,QAAQ,WACRC,KAAK,QACLC,QAXI,WACZL,GAAa,IAWLC,UAAU,SAJZ,sBCpDViB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.194a8cc3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Button from '@mui/material/Button';\nimport { ListItem, ListItemText } from '@mui/material';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const initialGoods = goodsFromServer;\n  const [goods, setGoods] = useState<string[]>(goodsFromServer);\n  const [isStarted, setIsStarted] = useState<boolean>(false);\n\n  const sortAlphabetically = () => {\n    const sortedByAlphabet: string[] = [...initialGoods].sort();\n\n    setGoods(sortedByAlphabet);\n  };\n\n  const sortByLength = () => {\n    const sortedByLength: string[]\n      = [...initialGoods].sort((a, b) => a.length - b.length);\n\n    setGoods(sortedByLength);\n  };\n\n  const reverse = () => {\n    const reversed: string[] = [...goods].reverse();\n\n    setGoods(reversed);\n  };\n\n  const reset = () => {\n    setGoods(initialGoods);\n  };\n\n  const start = () => {\n    setIsStarted(true);\n  };\n\n  return (\n    <div className=\"App\">\n      {!isStarted\n        ? (\n          <Button\n            variant=\"outlined\"\n            size=\"large\"\n            onClick={start}\n            className=\"button\"\n          >\n            Start\n          </Button>\n        )\n        : (\n          <div>\n            <Button\n              variant=\"outlined\"\n              size=\"large\"\n              onClick={sortAlphabetically}\n              className=\"button\"\n            >\n              Sort alphabetically\n            </Button>\n\n            <Button\n              variant=\"outlined\"\n              size=\"large\"\n              onClick={sortByLength}\n              className=\"button\"\n            >\n              Sort by length\n            </Button>\n\n            <Button\n              variant=\"outlined\"\n              size=\"large\"\n              onClick={reverse}\n              className=\"button\"\n            >\n              Reverse\n            </Button>\n\n            <Button\n              variant=\"outlined\"\n              size=\"large\"\n              onClick={reset}\n              className=\"button\"\n            >\n              Reset\n            </Button>\n\n            <ListItem className=\"Goods\">\n              {goods.map(good => (\n                <ListItemText key={good} className=\"Goods__item\">\n                  {good}\n                </ListItemText>\n              ))}\n            </ListItem>\n          </div>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}